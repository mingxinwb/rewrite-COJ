{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.routes.ts","webpack:///./src/app/components/editor/editor.component.css","webpack:///./src/app/components/editor/editor.component.html","webpack:///./src/app/components/editor/editor.component.ts","webpack:///./src/app/components/navbar/navbar.component.css","webpack:///./src/app/components/navbar/navbar.component.html","webpack:///./src/app/components/navbar/navbar.component.ts","webpack:///./src/app/components/new-problem/new-problem.component.css","webpack:///./src/app/components/new-problem/new-problem.component.html","webpack:///./src/app/components/new-problem/new-problem.component.ts","webpack:///./src/app/components/problem-detail/problem-detail.component.css","webpack:///./src/app/components/problem-detail/problem-detail.component.html","webpack:///./src/app/components/problem-detail/problem-detail.component.ts","webpack:///./src/app/components/problem-list/problem-list.component.css","webpack:///./src/app/components/problem-list/problem-list.component.html","webpack:///./src/app/components/problem-list/problem-list.component.ts","webpack:///./src/app/services/auth.service.ts","webpack:///./src/app/services/data.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;;;;;ACZA,mB;;;;;;;;;;;ACAA,6E;;;;;;;;;;;;;;;;;;;;;;;;;ACA0C;AACY;AAOtD;IAEE,sBAAoB,IAAiB;QAAjB,SAAI,GAAJ,IAAI,CAAa;QADrC,UAAK,GAAG,KAAK,CAAC;QAEZ,IAAI,CAAC,IAAI,CAAC,oBAAoB,EAAE,CAAC;IACnC,CAAC;IAJU,YAAY;QALxB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;SAGrB,CAAC;yCAG0B,kEAAW;OAF1B,YAAY,CAKxB;IAAD,mBAAC;CAAA;AALwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACRiC;AACjB;AACI;AACF;AAEW;AACA;AACf;AAEQ;AACyC;AACM;AACT;AACd;AACA;AAuBvE;IAAA;IAAyB,CAAC;IAAb,SAAS;QArBrB,8DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,2DAAY;gBACZ,oGAAoB;gBACpB,0GAAsB;gBACtB,kGAAmB;gBACnB,oFAAe;gBACf,oFAAe;aAChB;YACD,OAAO,EAAE;gBACP,uEAAa;gBACb,mDAAO;gBACP,0DAAW;gBACX,wDAAU;aACX;YACD,SAAS,EAAE;gBACT,kEAAW;gBACX,kEAAW;aACZ;YACD,SAAS,EAAE,CAAC,2DAAY,CAAC;SAC1B,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;;;;;;;;;;ACrCiC;AACiC;AACM;AAE9F,IAAM,MAAM,GAAW;IACnB;QACI,IAAI,EAAE,EAAE;QACR,UAAU,EAAE,UAAU;QACtB,SAAS,EAAE,MAAM;KACpB;IACD;QACI,IAAI,EAAE,UAAU;QAChB,SAAS,EAAE,oGAAoB;KAClC;IACD;QACI,IAAI,EAAE,cAAc;QACpB,SAAS,EAAE,0GAAsB;KACpC;IACD;QACI,IAAI,EAAE,IAAI;QACV,UAAU,EAAE,UAAU;KACzB;CACJ,CAAC;AAEK,IAAM,OAAO,GAAG,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;;;;;;;;;;;;ACxBpD,iCAAiC,eAAe,wBAAwB,OAAO,sBAAsB,sBAAsB,6BAA6B,OAAO,qBAAqB,wBAAwB,OAAO,qBAAqB,wBAAwB,OAAO,6CAA6C,yBAAyB,OAAO,iBAAiB,+BAA+B,2CAA2C,sBAAsB,+BAA+B,OAAO,GAAG,C;;;;;;;;;;;ACA9e,oSAAoS,UAAU,0vBAA0vB,yvB;;;;;;;;;;;;;;;;;;;;;;;;ACAt/B;AAQlD;IAcE;QAZA,aAAQ,GAAW,MAAM,CAAC;QAC1B,cAAS,GAAa,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC;QACzC,mBAAc,GAAG;YACf,MAAM,EAAE,gIAIN;YACF,QAAQ,EAAE,gFAE0B;SACrC,CAAC;IACc,CAAC;IAEjB,kCAAQ,GAAR;QACE,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QACjC,IAAI,CAAC,MAAM,CAAC,eAAe,GAAG,QAAQ,CAAC;QACvC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,mBAAmB,CAAC,CAAC;QAC1C,IAAI,CAAC,WAAW,EAAE,CAAC;IACrB,CAAC;IAED,qCAAW,GAAX;QACE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;QACzD,IAAI,CAAC,MAAM,CAAC,UAAU,EAAE,CAAC,OAAO,CAAC,WAAW,GAAG,IAAI,CAAC,QAAQ,CAAC,WAAW,EAAE,CAAC,CAAC;IAC9E,CAAC;IAED,qCAAW,GAAX,UAAY,QAAgB;QAC1B,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,IAAI,CAAC,WAAW,EAAE,CAAC;IACrB,CAAC;IAED,gCAAM,GAAN;QACE,IAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC;QACzC,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;IACzB,CAAC;IApCU,eAAe;QAL3B,+DAAS,CAAC;YACT,QAAQ,EAAE,YAAY;;;SAGvB,CAAC;;OACW,eAAe,CAsC3B;IAAD,sBAAC;CAAA;AAtC2B;;;;;;;;;;;;ACR5B,mB;;;;;;;;;;;ACAA,+JAA+J,OAAO,izCAAizC,eAAe,qe;;;;;;;;;;;;;;;;;;;;;;;;;ACAp7C;AACQ;AAO1D;IAGE,yBAAoB,IAAiB;QAArC,iBAIC;QAJmB,SAAI,GAAJ,IAAI,CAAa;QAFrC,UAAK,GAAW,KAAK,CAAC;QAGpB,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,SAAS,CAC7B,iBAAO,IAAI,YAAI,CAAC,OAAO,GAAG,OAAO,EAAtB,CAAsB,CAClC,CAAC;IACJ,CAAC;IAED,kCAAQ,GAAR;IACA,CAAC;IAED,+BAAK,GAAL;QACE,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC;IACpB,CAAC;IAED,gCAAM,GAAN;QACE,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC;IACrB,CAAC;IAlBU,eAAe;QAL3B,+DAAS,CAAC;YACT,QAAQ,EAAE,YAAY;;;SAGvB,CAAC;yCAI0B,kEAAW;OAH1B,eAAe,CAoB3B;IAAD,sBAAC;CAAA;AApB2B;;;;;;;;;;;;ACR5B,mB;;;;;;;;;;;ACAA,68BAA68B,YAAY,iT;;;;;;;;;;;;;;;;;;;;;;;;;ACAv6B;AAEQ;AAE1D,IAAM,eAAe,GAAY,MAAM,CAAC,MAAM,CAAC;IAC7C,EAAE,EAAE,CAAC;IACL,IAAI,EAAE,EAAE;IACR,IAAI,EAAE,EAAE;IACR,UAAU,EAAE,MAAM;CACnB,CAAC,CAAC;AAOH;IAGE,6BAAoB,WAAwB;QAAxB,gBAAW,GAAX,WAAW,CAAa;QAF5C,eAAU,GAAY,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,eAAe,CAAC,CAAC;QACzD,iBAAY,GAAa,CAAC,MAAM,EAAE,QAAQ,EAAE,MAAM,EAAE,OAAO,CAAC,CAAC;IACb,CAAC;IAEjD,sCAAQ,GAAR;IACA,CAAC;IAED,wCAAU,GAAV;QACE,gDAAgD;QAChD,wDAAwD;QACxD,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,IAAI,CAAC,UAAU,CAAC;aACvC,KAAK,CAAC,eAAK,IAAI,cAAO,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,EAAvB,CAAuB,CAAC,CAAC;QAC7C,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,eAAe,CAAC,CAAC;IACvD,CAAC;IAdU,mBAAmB;QAL/B,+DAAS,CAAC;YACT,QAAQ,EAAE,iBAAiB;;;SAG5B,CAAC;yCAIiC,kEAAW;OAHjC,mBAAmB,CAgB/B;IAAD,0BAAC;CAAA;AAhB+B;;;;;;;;;;;;AChBhC,mB;;;;;;;;;;;ACAA,iJAAiJ,YAAY,GAAG,cAAc,oCAAoC,cAAc,mL;;;;;;;;;;;;;;;;;;;;;;;;;;ACA9K;AACO;AAGC;AAO1D;IAEE,gCACU,WAAwB,EACxB,KAAqB;QADrB,gBAAW,GAAX,WAAW,CAAa;QACxB,UAAK,GAAL,KAAK,CAAgB;IAC3B,CAAC;IAEL,yCAAQ,GAAR;QAAA,iBAMC;QALC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC,UAAC,MAAc;YACzC,0DAA0D;YAC1D,KAAI,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC;iBAClC,IAAI,CAAC,iBAAO,IAAI,YAAI,CAAC,OAAO,GAAG,OAAO,EAAtB,CAAsB,CAAC,CAAC;QAC/C,CAAC,CAAC,CAAC;IACL,CAAC;IAbU,sBAAsB;QALlC,+DAAS,CAAC;YACT,QAAQ,EAAE,oBAAoB;;;SAG/B,CAAC;yCAIuB,kEAAW;YACjB,8DAAc;OAJpB,sBAAsB,CAclC;IAAD,6BAAC;CAAA;AAdkC;;;;;;;;;;;;ACXnC,+BAA+B,sBAAsB,yBAAyB,4BAA4B,yBAAyB,wBAAwB,KAAK,2BAA2B,yBAAyB,qBAAqB,sBAAsB,KAAK,gBAAgB,uBAAuB,KAAK,oBAAoB,gCAAgC,KAAK,sBAAsB,gCAAgC,KAAK,oBAAoB,gCAAgC,KAAK,qBAAqB,gCAAgC,KAAK,C;;;;;;;;;;;ACAvhB,gQAAgQ,6EAA6E,eAAe,oBAAoB,iDAAiD,YAAY,IAAI,cAAc,sC;;;;;;;;;;;;;;;;;;;;;;;;;ACA7Y;AAEQ;AAO1D;IAEE,8BAAoB,WAAwB;QAAxB,gBAAW,GAAX,WAAW,CAAa;IAAI,CAAC;IAEjD,uCAAQ,GAAR;QACE,IAAI,CAAC,WAAW,EAAE,CAAC;IACrB,CAAC;IAED,6CAA6C;IAC7C,0CAAW,GAAX;QAAA,iBAIC;QAHC,kDAAkD;QAClD,IAAI,CAAC,WAAW,CAAC,WAAW,EAAE;aACzB,SAAS,CAAC,kBAAQ,IAAI,YAAI,CAAC,QAAQ,GAAG,QAAQ,EAAxB,CAAwB,CAAC,CAAC;IACvD,CAAC;IAbU,oBAAoB;QALhC,+DAAS,CAAC;YACT,QAAQ,EAAE,kBAAkB;;;SAG7B,CAAC;yCAGiC,kEAAW;OAFjC,oBAAoB,CAehC;IAAD,2BAAC;CAAA;AAfgC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACTU;AACF;AACP;AACA;AACqB;AAElB;AAGrC;IAWE,qBAAmB,MAAc;QAAd,WAAM,GAAN,MAAM,CAAQ;QAVjC,gBAAW,GAAG,IAAI,oEAAe,CAAM,SAAS,CAAC,CAAC;QAClD,UAAK,GAAG,IAAI,gDAAa,CAAC;YACxB,QAAQ,EAAE,kCAAkC;YAC5C,MAAM,EAAE,iBAAiB;YACzB,YAAY,EAAE,gBAAgB;YAC9B,QAAQ,EAAE,kCAAkC;YAC5C,WAAW,EAAE,uBAAuB;YACpC,KAAK,EAAE,gBAAgB;SACxB,CAAC;QAGA,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;IACrE,CAAC;IAEM,2BAAK,GAAZ;QACE,IAAI,CAAC,KAAK,CAAC,SAAS,EAAE,CAAC;IACzB,CAAC;IAEM,0CAAoB,GAA3B;QAAA,iBAYC;QAXC,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,UAAC,GAAG,EAAE,UAAU;YACnC,EAAE,CAAC,CAAC,UAAU,IAAI,UAAU,CAAC,WAAW,IAAI,UAAU,CAAC,OAAO,CAAC,CAAC,CAAC;gBAC/D,MAAM,CAAC,QAAQ,CAAC,IAAI,GAAG,EAAE,CAAC;gBAC1B,KAAI,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC;gBAC5B,KAAI,CAAC,UAAU,EAAE,CAAC;gBAClB,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;YAClC,CAAC;YAAC,IAAI,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;gBACf,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;gBAChC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YACnB,CAAC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAEO,gCAAU,GAAlB,UAAmB,UAAU;QAC3B,oDAAoD;QACpD,IAAM,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,UAAU,CAAC,SAAS,GAAG,IAAI,CAAC,GAAG,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,CAAC,CAAC;QACvF,YAAY,CAAC,OAAO,CAAC,cAAc,EAAE,UAAU,CAAC,WAAW,CAAC,CAAC;QAC7D,YAAY,CAAC,OAAO,CAAC,UAAU,EAAE,UAAU,CAAC,OAAO,CAAC,CAAC;QACrD,YAAY,CAAC,OAAO,CAAC,YAAY,EAAE,SAAS,CAAC,CAAC;IAChD,CAAC;IAEM,4BAAM,GAAb;QACE,gDAAgD;QAChD,YAAY,CAAC,UAAU,CAAC,cAAc,CAAC,CAAC;QACxC,YAAY,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC;QACpC,YAAY,CAAC,UAAU,CAAC,YAAY,CAAC,CAAC;QACtC,YAAY,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC;QACnC,4BAA4B;QAC5B,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;IAC9B,CAAC;IAEM,qCAAe,GAAtB;QACE,6CAA6C;QAC7C,6BAA6B;QAC7B,IAAM,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC,CAAC;QACjE,MAAM,CAAC,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,GAAG,SAAS,CAAC;IAC1C,CAAC;IAEM,gCAAU,GAAjB;QACE,IAAM,WAAW,GAAG,YAAY,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC;QACzD,EAAE,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;YACjB,MAAM,IAAI,KAAK,CAAC,2CAA2C,CAAC,CAAC;QAC/D,CAAC;QAED,IAAM,IAAI,GAAG,IAAI,CAAC;QAClB,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,QAAQ,CAAC,WAAW,EAAE,UAAC,GAAG,EAAE,OAAO;YACnD,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;gBACZ,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;gBAC/B,YAAY,CAAC,OAAO,CAAC,SAAS,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,CAAC;YAC3D,CAAC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAvEU,WAAW;QADvB,gEAAU,EAAE;yCAYgB,sDAAM;OAXtB,WAAW,CAwEvB;IAAD,kBAAC;CAAA;AAxEuB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACTmB;AAC6B;AACjB;AAElB;AASrC;IAGE,qBAAoB,IAAU;QAAV,SAAI,GAAJ,IAAI,CAAM;QAF9B,kCAAkC;QAC1B,mBAAc,GAAG,IAAI,oEAAe,CAAY,EAAE,CAAC,CAAC;IAC1B,CAAC;IAEnC,iCAAW,GAAX;QAAA,iBASC;QARC,wBAAwB;QACxB,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,kBAAkB,CAAC;aAC5B,SAAS,EAAE;aACX,IAAI,CAAC,UAAC,GAAa;YAClB,KAAI,CAAC,cAAc,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,CAAC;QACvC,CAAC,CAAC;aACD,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QAC7B,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC,YAAY,EAAE,CAAC;IAC5C,CAAC;IAED,gCAAU,GAAV,UAAW,EAAU;QAArB,iBASC;QARC,6DAA6D;QAC7D,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,sBAAoB,EAAI,CAAC;aACzC,SAAS,EAAE;aACX,IAAI,CAAC,UAAC,GAAa;YAClB,KAAI,CAAC,WAAW,EAAE,CAAC;YACnB,MAAM,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC;QACpB,CAAC,CAAC;aACD,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IAC/B,CAAC;IAED,gCAAU,GAAV,UAAW,OAAgB;QAA3B,iBAYC;QAXC,yCAAyC;QACzC,+BAA+B;QAC/B,IAAM,OAAO,GAAG,IAAI,qDAAO,CAAC,EAAC,cAAc,EAAE,kBAAkB,EAAC,CAAC,CAAC;QAClE,IAAM,cAAc,GAAG,IAAI,4DAAc,CAAC,EAAC,OAAO,EAAE,OAAO,EAAC,CAAC,CAAC;QAC9D,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,kBAAkB,EAAE,OAAO,EAAE,cAAc,CAAC;aAC7D,SAAS,EAAE;aACX,IAAI,CAAC,UAAC,GAAa;YAClB,KAAI,CAAC,WAAW,EAAE,CAAC;YACnB,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC;QAClB,CAAC,CAAC;aACD,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC;IAC9B,CAAC;IAEO,iCAAW,GAAnB,UAAoB,KAAU;QAC5B,OAAO,CAAC,KAAK,CAAC,kBAAkB,EAAE,KAAK,CAAC,CAAC;QACzC,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;IAC/B,CAAC;IA5CU,WAAW;QAHvB,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;yCAI0B,kDAAI;OAHnB,WAAW,CA6CvB;IAAD,kBAAC;CAAA;AA7CuB;;;;;;;;;;;;;;ACbxB;AAAA,gFAAgF;AAChF,2EAA2E;AAC3E,gEAAgE;AAEzD,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;GAKG;AACH,mEAAmE;;;;;;;;;;;;;;;;;;ACdpB;AAC4B;AAE9B;AACY;AAEzD,EAAE,CAAC,CAAC,qEAAW,CAAC,UAAU,CAAC,CAAC,CAAC;IAC3B,oEAAc,EAAE,CAAC;AACnB,CAAC;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAhB,CAAgB,CAAC,CAAC","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<app-navbar></app-navbar>\\n<router-outlet></router-outlet>\"","import { Component } from '@angular/core';\nimport { AuthService } from './services/auth.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n  constructor(private auth: AuthService) {\n    this.auth.handleAuthentication();\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpModule } from '@angular/http';\n\nimport { DataService } from './services/data.service';\nimport { AuthService } from './services/auth.service';\nimport { routing } from './app.routes';\n\nimport { AppComponent } from './app.component';\nimport { ProblemListComponent } from './components/problem-list/problem-list.component';\nimport { ProblemDetailComponent } from './components/problem-detail/problem-detail.component';\nimport { NewProblemComponent } from './components/new-problem/new-problem.component';\nimport { NavbarComponent } from './components/navbar/navbar.component';\nimport { EditorComponent } from './components/editor/editor.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ProblemListComponent,\n    ProblemDetailComponent,\n    NewProblemComponent,\n    NavbarComponent,\n    EditorComponent\n  ],\n  imports: [\n    BrowserModule,\n    routing,\n    FormsModule,\n    HttpModule\n  ],\n  providers: [\n    DataService,\n    AuthService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Routes, RouterModule } from '@angular/router';\nimport { ProblemListComponent } from './components/problem-list/problem-list.component';\nimport { ProblemDetailComponent } from './components/problem-detail/problem-detail.component';\n\nconst routes: Routes = [\n    {\n        path: '',\n        redirectTo: 'problems',\n        pathMatch: 'full'\n    },\n    {\n        path: 'problems',\n        component: ProblemListComponent\n    },\n    {\n        path: 'problems/:id',\n        component: ProblemDetailComponent\n    },\n    {\n        path: '**',\n        redirectTo: 'problems',\n    }\n];\n\nexport const routing = RouterModule.forRoot(routes);","module.exports = \"@media screen {\\n    #editor {\\n        height: 600px;\\n    }\\n\\n    .lang-select {\\n        width: 100%;\\n        margin-right: 10px;\\n    }\\n\\n    header .btn {\\n        margin: 0 5px;\\n    }\\n\\n    footer .btn {\\n        margin: 0 5px;\\n    }\\n\\n    .editor-footer,\\n    .editor-header {\\n        margin: 10px 0;\\n    }\\n\\n    .curson {\\n        /* position:absolute; */\\n        background: rgba(0,250,0,0.5);\\n        z-index: 40;\\n        width: 2px!important;\\n    }\\n}\"","module.exports = \"<section>\\n  <header class=\\\"editor-header\\\">\\n    <select class=\\\"form-control pull-left lang-select\\\" name=\\\"language\\\" \\n    [(ngModel)]=\\\"language\\\" (change)=\\\"setLanguage(language)\\\">\\n      <option *ngFor=\\\"let language of languages\\\" [value]=\\\"language\\\">\\n        {{language}}\\n      </option>\\n    </select>\\n    <!-- reset button -->\\n    <!-- Button trigger modal -->\\n    <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" data-toggle=\\\"modal\\\" data-target=\\\"#exampleModal\\\">\\n      Reset\\n    </button>\\n    \\n    <!-- Modal -->\\n    <div class=\\\"modal fade\\\" id=\\\"exampleModal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"exampleModalLabel\\\" aria-hidden=\\\"true\\\">\\n      <div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\n        <div class=\\\"modal-content\\\">\\n          <div class=\\\"modal-header\\\">\\n            <h5 class=\\\"modal-title\\\" id=\\\"exampleModalLabel\\\">Are you sure</h5>\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\n              <span aria-hidden=\\\"true\\\">&times;</span>\\n            </button>\\n          </div>\\n          <div class=\\\"modal-body\\\">\\n            You will lose your current code in the editor, are you sure?\\n          </div>\\n          <div class=\\\"modal-footer\\\">\\n            <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" data-dismiss=\\\"modal\\\">Cancel</button>\\n            <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" data-dismiss=\\\"modal\\\" (click)=\\\"resetEditor()\\\">Reset</button>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </header>\\n  <div id=\\\"editor\\\">\\n  </div><!-- This is the body -->\\n  <footer class=\\\"editor-footer\\\">\\n    <button type=\\\"button\\\" class=\\\"btn btn-success pull-right\\\"\\n    (click)=\\\"submit()\\\">Submit Solution</button>\\n  </footer>\\n</section>\\n\"","import { Component, OnInit } from '@angular/core';\ndeclare const ace: any;\n\n@Component({\n  selector: 'app-editor',\n  templateUrl: './editor.component.html',\n  styleUrls: ['./editor.component.css']\n})\nexport class EditorComponent implements OnInit {\n  editor: any;\n  language: string = 'Java';\n  languages: string[] = ['Java', 'Python'];\n  defaultContent = {\n    'Java': `public class Example {\n      public static void main(String[] args) {\n        // Type your Java code here...\n      }\n    }`,\n    'Python': `class Solution:\n      def example():\n        #Write your Python code here...`\n  };\n  constructor() { }\n\n  ngOnInit() {\n    this.editor = ace.edit('editor');\n    this.editor.$blockScrolling = Infinity;\n    this.editor.setTheme('ace/theme/eclipse');\n    this.resetEditor();\n  }\n\n  resetEditor(): void {\n    this.editor.setValue(this.defaultContent[this.language]);\n    this.editor.getSession().setMode('ace/mode/' + this.language.toLowerCase());\n  }\n\n  setLanguage(language: string): void {\n    this.language = language;\n    this.resetEditor();\n  }\n\n  submit(): void {\n    const userCodes = this.editor.getValue();\n    console.log(userCodes);\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\n    <nav class=\\\"navbar navbar-expand-lg navbar-light bg-light\\\">\\n        <a class=\\\"navbar-brand\\\" href=\\\"#\\\">{{title}}</a>\\n        <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarSupportedContent\\\" aria-controls=\\\"navbarSupportedContent\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n          <span class=\\\"navbar-toggler-icon\\\"></span>\\n        </button>\\n      \\n        <div class=\\\"collapse navbar-collapse justify-content-end\\\" id=\\\"navbarSupportedContent\\\">\\n          \\n          <ul class=\\\"nav navbar-nav\\\">\\n            <li>\\n                <form class=\\\"form-inline my-2 my-lg-0\\\">\\n                    <input class=\\\"form-control mr-sm-2\\\" type=\\\"search\\\" placeholder=\\\"Search\\\" aria-label=\\\"Search\\\">\\n                    <button class=\\\"btn btn-outline-success my-2 my-sm-0\\\" type=\\\"submit\\\">Search</button>\\n                  </form>\\n            </li>\\n            <li *ngIf=\\\"!auth.isAuthenticated()\\\">\\n              <form class=\\\"navbar-form\\\">\\n                <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"login()\\\">Sign in</button>\\n              </form>\\n            </li>\\n            <li class=\\\"nav-item dropdown\\\" *ngIf=\\\"auth.isAuthenticated()\\\">\\n              <a class=\\\"nav-link dropdown-toggle\\\" href=\\\"#\\\" id=\\\"navbarDropdown\\\" role=\\\"button\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\n                {{profile?.name}}\\n              </a>\\n              <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"navbarDropdown\\\">\\n                <a class=\\\"dropdown-item\\\" href=\\\"#\\\">My Profile</a>\\n                <a class=\\\"dropdown-item\\\" href=\\\"#\\\">My Favorites</a>\\n                <div class=\\\"dropdown-divider\\\"></div>\\n                <a class=\\\"dropdown-item\\\" (click)=\\\"logout()\\\" href=\\\"#\\\">Log out</a>\\n              </div>\\n            </li>\\n          </ul>\\n        </div>\\n      </nav>  \\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../services/auth.service';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n  title: string = 'COJ';\n  profile: any;\n  constructor(private auth: AuthService) {\n    this.auth.userProfile.subscribe(\n      profile => this.profile = profile\n    );\n  }\n\n  ngOnInit() {\n  }\n\n  login() {\n    this.auth.login();\n  }\n\n  logout() {\n    this.auth.logout();\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div>\\n    <form #formRef=\\\"ngForm\\\">\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"problemName\\\">Problem Name</label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"problemName\\\"\\n          name=\\\"problemName\\\" placeholder=\\\"Input problem name\\\" required\\n          [(ngModel)]=\\\"newProblem.name\\\">\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"problemDesc\\\">Problem Description</label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"problemDesc\\\"\\n          name=\\\"problemDesc\\\" placeholder=\\\"Input description\\\" required\\n          [(ngModel)]=\\\"newProblem.desc\\\">\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"difficulty\\\">Difficulty</label>\\n        <select class=\\\"form-control\\\" id=\\\"difficulty\\\" name=\\\"difficulty\\\" \\n          [(ngModel)]=\\\"newProblem.difficulty\\\">\\n          <option *ngFor=\\\"let difficulty of difficulties\\\" [value]=\\\"difficulty\\\">\\n            {{difficulty}}\\n          </option>\\n        </select>\\n      </div>\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-md-12\\\">\\n          <button type=\\\"submit\\\" class=\\\"btn btn-primary float-right\\\"\\n            (click)=\\\"addProblem()\\\">Submit</button>\\n        </div>\\n      </div>\\n      \\n    </form>\\n  </div>\"","import { Component, OnInit } from '@angular/core';\nimport { Problem } from '../../models/problem.model';\nimport { DataService } from '../../services/data.service';\n\nconst DEFAULT_PROBLEM: Problem = Object.freeze({\n  id: 0,\n  name: '',\n  desc: '',\n  difficulty: 'easy'\n});\n\n@Component({\n  selector: 'app-new-problem',\n  templateUrl: './new-problem.component.html',\n  styleUrls: ['./new-problem.component.css']\n})\nexport class NewProblemComponent implements OnInit {\n  newProblem: Problem = Object.assign({}, DEFAULT_PROBLEM);\n  difficulties: string[] = ['easy', 'medium', 'hard', 'super'];\n  constructor(private dataService: DataService) { }\n\n  ngOnInit() {\n  }\n\n  addProblem():void {\n    // this.dataService.addProblem(this.newProblem);\n    // this.newProblem = Object.assign({}, DEFAULT_PROBLEM);\n    this.dataService.addProblem(this.newProblem)\n        .catch(error => console.log(error.body));\n    this.newProblem = Object.assign({}, DEFAULT_PROBLEM);\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\" *ngIf=\\\"problem\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-12 col-md-4\\\">\\n      <h2>\\n        {{problem.id}}.{{problem.name}}\\n      </h2>\\n      <p>\\n        {{problem.desc}}\\n      </p>\\n    </div>\\n    <div class=\\\"d-none d-sm-block d-md-block d-lg-block d-xl-block col-sm-12 col-md\\\">\\n      <app-editor></app-editor>\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Params } from '@angular/router';\n\nimport { Problem } from '../../models/problem.model';\nimport { DataService } from '../../services/data.service';\n\n@Component({\n  selector: 'app-problem-detail',\n  templateUrl: './problem-detail.component.html',\n  styleUrls: ['./problem-detail.component.css']\n})\nexport class ProblemDetailComponent implements OnInit {\n  problem: Problem;\n  constructor(\n    private dataService: DataService,\n    private route: ActivatedRoute\n  ) { }\n\n  ngOnInit() {\n    this.route.params.subscribe((params: Params) => {\n      // this.problem = this.dataService.getProblem(+params.id);\n      this.dataService.getProblem(+params.id)\n          .then(problem => this.problem = problem);\n    });\n  }\n}\n","module.exports = \".difficulty {\\n    min-width: 65px;\\n    margin-right: 10px;\\n    display: inline-block;\\n    text-align: center;\\n    border-radius: 5%;\\n  }\\n  \\n  .label.difficulty {\\n    padding-top: 0.4em;\\n    color: #fbfdfa;\\n    font-size: 14px;\\n  }\\n  \\n  .title {\\n    font-size: 1.2em;\\n  }\\n  \\n  .diff-easy {\\n    background-color: #42ebf4;\\n  }\\n  \\n  .diff-medium {\\n    background-color: #92cf5c;\\n  }\\n  \\n  .diff-hard {\\n    background-color: #dd0d1e;\\n  }\\n  \\n  .diff-super {\\n    background-color: #8d16e2;\\n  }\"","module.exports = \"<div class=\\\"container\\\">\\n  <app-new-problem></app-new-problem>\\n  <div class=\\\"list-group\\\">\\n    <a class=\\\"list-group-item\\\" *ngFor=\\\"let problem of problems\\\"\\n      [routerLink]=\\\"['/problems', problem.id]\\\">\\n      <span class=\\\"{{'pull-left label difficulty diff-' + problem.difficulty.toLocaleLowerCase()}}\\\">\\n        {{problem.difficulty}}\\n      </span>\\n      <strong class=\\\"title\\\">{{problem.id}}. {{problem.name}}</strong>\\n    </a>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { Problem } from '../../models/problem.model';\nimport { DataService } from '../../services/data.service';\n\n@Component({\n  selector: 'app-problem-list',\n  templateUrl: './problem-list.component.html',\n  styleUrls: ['./problem-list.component.css']\n})\nexport class ProblemListComponent implements OnInit {\n  problems: Problem[];\n  constructor(private dataService: DataService) { }\n\n  ngOnInit() {\n    this.getProblems();\n  }\n\n  // already have void no need to write return;\n  getProblems(): void {\n    // this.problems = this.dataService.getProblems();\n    this.dataService.getProblems()\n        .subscribe(problems => this.problems = problems);\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport 'rxjs/add/operator/filter';\nimport * as auth0 from 'auth0-js';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport { Observable } from 'rxjs/Rx';\nimport 'rxjs/add/operator/toPromise';\n\n@Injectable()\nexport class AuthService {\n  userProfile = new BehaviorSubject<any>(undefined);\n  auth0 = new auth0.WebAuth({\n    clientID: 'Tf01f11X_54rfSPu43sjEB0NGrceSDzp',\n    domain: 'doris.auth0.com',\n    responseType: 'token id_token',\n    audience: 'https://doris.auth0.com/userinfo',\n    redirectUri: 'http://localhost:3000',\n    scope: 'openid profile'\n  })\n\n  constructor(public router: Router) {\n    this.userProfile.next(JSON.parse(localStorage.getItem('profile')));\n  }\n\n  public login(): void {\n    this.auth0.authorize();\n  }\n\n  public handleAuthentication(): void {\n    this.auth0.parseHash((err, authResult) => {\n      if (authResult && authResult.accessToken && authResult.idToken) {\n        window.location.hash = '';\n        this.setSession(authResult);\n        this.getProfile();\n        this.router.navigate(['/home']);\n      } else if (err) {\n        this.router.navigate(['/home']);\n        console.log(err);\n      }\n    });\n  }\n\n  private setSession(authResult): void {\n    // Set the time that the access token will expire at\n    const expiresAt = JSON.stringify((authResult.expiresIn * 1000) + new Date().getTime());\n    localStorage.setItem('access_token', authResult.accessToken);\n    localStorage.setItem('id_token', authResult.idToken);\n    localStorage.setItem('expires_at', expiresAt);\n  }\n\n  public logout(): void {\n    // Remove token and expire time from localSorage\n    localStorage.removeItem('access_token');\n    localStorage.removeItem('id_token');\n    localStorage.removeItem('expires_at');\n    localStorage.removeItem('profile');\n    // Go back to the home route\n    this.router.navigate(['/']);\n  }\n\n  public isAuthenticated(): boolean {\n    // Check whether the current time is past the\n    // access token's expire time\n    const expiresAt = JSON.parse(localStorage.getItem('expires_at'));\n    return new Date().getTime() < expiresAt;\n  }\n\n  public getProfile(): void {\n    const accessToken = localStorage.getItem('access_token');\n    if (!accessToken) {\n      throw new Error('Access token must exist to fetch profile.');\n    }\n\n    const self = this;\n    this.auth0.client.userInfo(accessToken, (err, profile) => {\n      if (profile) {\n        self.userProfile.next(profile);\n        localStorage.setItem('profile', JSON.stringify(profile));\n      }\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Http, Response, Headers, RequestOptions } from '@angular/http';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport { Observable } from 'rxjs/Rx';\nimport 'rxjs/add/operator/toPromise';\n\n\nimport { Problem } from '../models/problem.model';\nimport { PROBLEMS } from '../mock-problems';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataService {\n  // problems: Problem[] = PROBLEMS;\n  private _problemSource = new BehaviorSubject<Problem[]>([]);\n  constructor(private http: Http) { }\n\n  getProblems(): Observable<Problem[]> {\n    // return this.problems;\n    this.http.get('/api/v1/problems')\n        .toPromise()\n        .then((res: Response) => {\n          this._problemSource.next(res.json());\n        })\n        .catch(this.handleError);\n    return this._problemSource.asObservable();\n  }\n\n  getProblem(id: number) {\n    // return this.problems.find((problem) => problem.id === id);\n    return this.http.get(`/api/v1/problems/${id}`)\n        .toPromise()\n        .then((res: Response) => {\n          this.getProblems();\n          return res.json();\n        })\n        .catch(this.handleError);\n  }\n\n  addProblem(problem: Problem) {\n    // problem.id = this.problems.length + 1;\n    // this.problems.push(problem);\n    const headers = new Headers({'content-type': 'application/json'});\n    const requestOptions = new RequestOptions({headers: headers});\n    return this.http.post('/api/v1/problems', problem, requestOptions)\n        .toPromise()\n        .then((res: Response) => {\n          this.getProblems();\n          return res.json;\n        })\n        .catch(this.handleError)\n  }\n\n  private handleError(error: any): Promise<any> {\n    console.error('An error occured', error);\n    return Promise.reject(error);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}